// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: List renders properly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <List
    columnDefs={
      Array [
        Object {
          "field": "uuid",
          "headerName": "uuid",
          "hide": true,
        },
        Object {
          "field": "name.givenName",
          "headerName": "Given Name",
        },
        Object {
          "field": "name.familyName",
          "headerName": "Family Name",
        },
        Object {
          "field": "gender",
          "headerName": "Gender",
        },
        Object {
          "field": "age",
          "headerName": "Age",
        },
      ]
    }
    delayInterval={10000}
    dispatch={[Function]}
    fetchListActionCreator={[Function]}
    filters={Array []}
    rowData={Array []}
    title="List"
  >
    <div>
      <h3>
        <Label
          bsClass="label"
          bsStyle="default"
        >
          <span
            className="label label-default"
          >
            List
          </span>
        </Label>
      </h3>
      <Connect(DataGrid)
        columnDefs={
          Array [
            Object {
              "field": "uuid",
              "headerName": "uuid",
              "hide": true,
            },
            Object {
              "field": "name.givenName",
              "headerName": "Given Name",
            },
            Object {
              "field": "name.familyName",
              "headerName": "Family Name",
            },
            Object {
              "field": "gender",
              "headerName": "Gender",
            },
            Object {
              "field": "age",
              "headerName": "Age",
            },
          ]
        }
        rowData={Array []}
      >
        <DataGrid
          columnDefs={
            Array [
              Object {
                "field": "uuid",
                "headerName": "uuid",
                "hide": true,
              },
              Object {
                "field": "name.givenName",
                "headerName": "Given Name",
              },
              Object {
                "field": "name.familyName",
                "headerName": "Family Name",
              },
              Object {
                "field": "gender",
                "headerName": "Gender",
              },
              Object {
                "field": "age",
                "headerName": "Age",
              },
            ]
          }
          dispatch={[Function]}
          rowData={Array []}
        >
          <div
            id="omrsGrid"
            style={
              Object {
                "height": "600px",
              }
            }
          >
            <label>
              Search:
              <input
                onChange={[Function]}
                type="text"
              />
            </label>
            <AgGridReact
              animateRows={true}
              columnDefs={
                Array [
                  Object {
                    "field": "uuid",
                    "headerName": "uuid",
                    "hide": true,
                  },
                  Object {
                    "field": "name.givenName",
                    "headerName": "Given Name",
                  },
                  Object {
                    "field": "name.familyName",
                    "headerName": "Family Name",
                  },
                  Object {
                    "field": "gender",
                    "headerName": "Gender",
                  },
                  Object {
                    "field": "age",
                    "headerName": "Age",
                  },
                ]
              }
              enableSorting={true}
              id="omrsGrid"
              onGridReady={[Function]}
              onSelectionChanged={[Function]}
              rowClassRules="rowClassRules"
              rowData={Array []}
              rowDataChanged={[Function]}
              rowSelection="single"
            >
              <div
                style={
                  Object {
                    "height": "100%",
                  }
                }
              />
            </AgGridReact>
          </div>
        </DataGrid>
      </Connect(DataGrid)>
    </div>
  </List>
</Provider>
`;
